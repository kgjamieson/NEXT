version: '3.8'

services:
  cadvisor:
    image: google/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "0.0.0.0:8888:8080"

#   minionredis:
#     image: redis
#     command: redis-server /next_backend/next/database/redis.conf
#     volumes:
#      - {{NEXT_DIR}}:/next_backend
#     networks:
#      - nextnet

  minionworker:
    build: {{NEXT_DIR}}/next/base_docker_image
    command: ./next/broker/next_worker_startup.sh
    volumes:
     - {{NEXT_DIR}}:/next_backend
    working_dir: /next_backend
    environment:
      # Add necessary environment variables here
#      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672
#      - CELERY_RESULT_BACKEND=redis://minionredis:6379/0
#      - CELERY_RESULT_BACKEND=redis://rabbitmqredis:6379/0
#      - MINIONREDIS_PORT_6379_TCP_ADDR=minionredis
      - MONGODB_PORT_27017_TCP_ADDR=mongodb
      - RABBIT_PORT_5672_TCP_ADDR=rabbitmq
      - RABBITREDIS_PORT_6379_TCP_ADDR=rabbitmqredis
      - PYTHONUNBUFFERED=TRUE
      - CELERY_SYNC_WORKER_COUNT=6
      - CELERY_ASYNC_WORKER_COUNT=4
      - CELERY_THREADS_PER_ASYNC_WORKER=1
      # Should be max(1,int(.25*master_num_cpus))
      - CELERY_ASYNC_WORKER_PREFETCH=4
      - CELERY_DASHBOARD_WORKER_COUNT=1
      - CELERY_THREADS_PER_DASHBOARD_WORKER=2
      - CELERY_DASHBOARD_WORKER_PREFETCH=1
      - GIT_HASH={{GIT_HASH}}
      - PYTHONPATH=:/next_backend
      - HOSTNAME=test_worker
    networks:
     - nextnet
    depends_on:
      - rabbitmq
#       - minionredis
      - rabbitmqredis
      - mongodb

  nextbackenddocker:
    build: {{NEXT_DIR}}/next/base_docker_image
    command: gunicorn --worker-class=gevent -R --log-level=debug --logger-class=simple --reload -b 0.0.0.0:8000 -w 1 next.api.api:app
    volumes:
     - {{NEXT_DIR}}:/next_backend
    working_dir: /next_backend
    ports:
      - "0.0.0.0:8000:8000"
    environment:
      - MONGODB_PORT_27017_TCP_ADDR=mongodb
 #     - MINIONREDIS_PORT_6379_TCP_ADDR=minionredis
      - RABBIT_PORT_5672_TCP_ADDR=rabbitmq
      - RABBITREDIS_PORT_6379_TCP_ADDR=rabbitmqredis
      - MINIONWORKER_HOSTNAME=test_worker
      - PYTHONUNBUFFERED=TRUE
      - PYTHONPATH=:/next_backend
      - NEXT_BACKEND_GLOBAL_HOST
      - NEXT_BACKEND_GLOBAL_PORT
      - TERM=xterm
      - CELERY_ON=True
    networks:
     - nextnet
    depends_on:
      - rabbitmq
      - mongodb
      - minionworker
      - rabbitmqredis

  mongodb:
    image: mongo:4.4
    user: root
    volumes:
     - {{NEXT_DIR}}:/next_backend
     - /dump
     - /data/db
    ports:
     - "0.0.0.0:27017:27017" # Default MongoDB port
     - "0.0.0.0:28017:28017" # mongo http monitor
    working_dir: /next_backend
    networks:
     - nextnet

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
     - "0.0.0.0:5672:5672"   # RabbitMQ
     - "0.0.0.0:15672:15672" # Management console
    networks:
     - nextnet

  rabbitmqredis:
    image: redis
    ports:
     - "0.0.0.0:6379:6379"
    networks:
     - nextnet

#  mongodb:
#    build: {{NEXT_DIR}}/next/base_docker_image
#    #command: /usr/bin/mongod --smallfiles --rest
#    command: /usr/bin/mongod
#    volumes:
#     - {{NEXT_DIR}}:/next_backend
#     - /dump
#     - /data/db
#    working_dir: /next_backend
#    expose:
#     - "27017"
#    ports:
#     - "0.0.0.0:28017:28017" # mongo http monitor
#    networks:
#     - nextnet

#  rabbitmqmonitor:
#    build: {{NEXT_DIR}}/next/base_docker_image
#    command: python ./next/broker/cluster_monitor.py
#    volumes:
#     - {{NEXT_DIR}}:/next_backend
#    working_dir: /next_backend
#    links:
#      - rabbitmq:RABBIT
#      - rabbitmqredis:RABBITREDIS
#    environment:
#     - PYTHONPATH=:/next_backend
#     - PYTHONUNBUFFERED=TRUE
#    networks:
#     - nextnet


networks:
  nextnet:
